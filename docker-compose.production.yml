# Docker-compose configuration for development environment on server

version: '3.7'

services:
  booking_nginx:
    build:
      context: .
      dockerfile: Dockerfile-node.production
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: booking_nginx
    ports:
      - "80:80"
    depends_on:
      - booking_django
    env_file: .env
    volumes:
      - "./app:/usr/src/app"
      - "./app/node_modules:/usr/src/app/node_modules"
      - "./nginx:/etc/nginx"
      - "./backend/staticfiles:/usr/share/nginx/html/static-backend"
      - "./backend/media:/usr/share/nginx/html/media"
    networks:
      - booking_production_services

  booking_django:
    image: django
    container_name: booking_django
    build:
      context: .
      dockerfile: Dockerfile-django.production
    ports:
      - "3000:3000"
    volumes:
      - "./backend:/app"
    environment:
      - PYTHONUNBUFFERED=1
    env_file: .env
    depends_on:
      - booking_postgres
      - redis
    networks:
      - booking_production_services

  booking_postgres:
    image: postgis/postgis
    container_name: booking_postgres
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: booking
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: booking
    ports:
      - "5432:5432"
    networks:
      - booking_production_services

  redis:
    image: redis:5-alpine
    networks:
      - booking_production_services

  celery:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-django.production
    command: celery --app backend worker --loglevel=info
    volumes:
      - "./backend:/app"
    environment:
      - PYTHONUNBUFFERED=1
    env_file: .env
    depends_on:
      - booking_postgres
      - booking_django
      - redis
    networks:
      - booking_production_services

  flower:
    image: mher/flower
    command: celery --broker=$CELERY_BROKER flower
    ports:
      - 5555:5555
    env_file: .env
    depends_on:
      - booking_django
      - redis
      - celery
    networks:
      - booking_production_services

volumes:
  postgres_volume:

networks:
  booking_production_services:
    name: booking_production_services
    driver: bridge
